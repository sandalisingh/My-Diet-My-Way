{"ast":null,"code":"var _jsxFileName = \"/Applications/Sandali/DietitianWebsite/client/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport LineTitle from \"../Components/LineTitle\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0]; //inputs from form\n    // Find username in db\n\n    const userData = database.find(user => user.username === uname.value); // Compare password\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        //valid password and username\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Error message\n\n\n  const renderErrorMessage = name => {\n    name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SmFont CursiveFont Error\",\n      children: errorMessages.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }; // Login form\n\n\n  const renderForm =\n  /*#__PURE__*/\n  // <Form className=\"container\" onSubmit={handleSubmit} style={{color:\"#48466D\"}}>\n  //     <h2 className=\"MdFont CursiveFont LightGreenFontShade\">Login</h2>\n  //     <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n  //       <Form.Label className=\"InputLabel\">Username</Form.Label>\n  //       <Form.Control className=\"InputFocusGreen\" type=\"text\" name=\"uname\" required />\n  //       {renderErrorMessage(\"uname\")}\n  //     </Form.Group>\n  //     <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n  //       <Form.Label className=\"InputLabel\">Password</Form.Label>\n  //       <Form.Control className=\"InputFocusGreen\" type=\"password\" name=\"pass\" required />\n  //       {renderErrorMessage(\"pass\")}\n  //     </Form.Group>\n  //     <Button className=\"ButtonStyle\" variant=\"primary\" type=\"submit\">Submit</Button>\n  //   </Form>\n  // );\n  _jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"InputLabel\",\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"InputFocusGreen\",\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"InputLabel\",\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"InputFocusGreen\",\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ButtonStyle\",\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 6\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer ToCenter DarkGreenBox LoginBox BlogBox CurvedContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle\",\n        children: [isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MdFont CursiveFont LightGreenFontShade\",\n          children: \"User successfully logged in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this) : renderForm, /*#__PURE__*/_jsxDEV(LineTitle, {\n          Light: true,\n          OnlyLine: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Applications/Sandali/DietitianWebsite/client/src/pages/Login.jsx"],"names":["React","useState","LineTitle","Form","Button","Login","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMS,QAAQ,GAAG,CACf;AACEC,IAAAA,QAAQ,EAAE,OADZ;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADe,EAKf;AACED,IAAAA,QAAQ,EAAE,OADZ;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GALe,CAAjB;AAWA,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAE,kBADM;AAEbC,IAAAA,IAAI,EAAE;AAFO,GAAf;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACAA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAI;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBI,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAtB,CAJ8B,CAIY;AAE1C;;AACA,UAAMC,QAAQ,GAAGX,QAAQ,CAACY,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACZ,QAAL,KAAkBG,KAAK,CAACU,KAAhD,CAAjB,CAP8B,CAS9B;;AACA,QAAIH,QAAJ,EAAc;AACZ,UAAIA,QAAQ,CAACT,QAAT,KAAsBG,IAAI,CAACS,KAA/B,EAAsC;AACpC;AACAjB,QAAAA,gBAAgB,CAAC;AAAEkB,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,OAAO,EAAEb,MAAM,CAACE;AAAhC,SAAD,CAAhB;AACD,OAHD,MAGO;AACL;AACAN,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,KARD,MAQO;AACL;AACAF,MAAAA,gBAAgB,CAAC;AAAEkB,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEb,MAAM,CAACC;AAAjC,OAAD,CAAhB;AACD;AACF,GAtBD,CApBe,CA4Cf;;;AACA,QAAMa,kBAAkB,GAAIF,IAAD,IAAU;AACnCA,IAAAA,IAAI,KAAKnB,aAAa,CAACmB,IAAvB,iBACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,gBAA2CnB,aAAa,CAACoB;AAAzD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJD,CA7Ce,CAmDf;;;AACA,QAAME,UAAU;AAAA;AACd;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACC;AAAM,MAAA,QAAQ,EAAEZ,YAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,iBAAjB;AAAmC,UAAA,IAAI,EAAC,MAAxC;AAA+C,UAAA,IAAI,EAAC,OAApD;AAA4D,UAAA,QAAQ;AAApE;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGW,kBAAkB,CAAC,OAAD,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,SAAS,EAAC,iBAAjB;AAAmC,UAAA,IAAI,EAAC,UAAxC;AAAmD,UAAA,IAAI,EAAC,MAAxD;AAA+D,UAAA,QAAQ;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGA,kBAAkB,CAAC,MAAD,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAC,SAAxC;AAAkD,QAAA,IAAI,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAlBH;;AAkCA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,8DAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,mBAEGnB,WAAW,gBAAG;AAAK,UAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,GAA+FoB,UAF7G,eAGE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,IAAlB;AAAwB,UAAA,QAAQ,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAhGQvB,K;;KAAAA,K;AAkGT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport LineTitle from \"../Components/LineTitle\"\nimport { Form, Button } from \"react-bootstrap\";\n\n\nfunction Login() {\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const database = [\n    {\n      username: \"user1\",\n      password: \"pass1\"\n    },\n    {\n      username: \"user2\",\n      password: \"pass2\"\n    }\n  ];\n\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = (event) => {\n    //Prevent page reload\n    event.preventDefault();\n\n    var { uname, pass } = document.forms[0];  //inputs from form\n\n    // Find username in db\n    const userData = database.find((user) => user.username === uname.value);\n\n    // Compare password\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({ name: \"pass\", message: errors.pass });\n      } else {\n        //valid password and username\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({ name: \"uname\", message: errors.uname });\n    }\n  };\n\n  // Error message\n  const renderErrorMessage = (name) => {\n    name === errorMessages.name && (\n      <div className=\"SmFont CursiveFont Error\">{errorMessages.message}</div>\n    );\n  }\n\n  // Login form\n  const renderForm = (\n    // <Form className=\"container\" onSubmit={handleSubmit} style={{color:\"#48466D\"}}>\n    //     <h2 className=\"MdFont CursiveFont LightGreenFontShade\">Login</h2>\n\n    //     <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n    //       <Form.Label className=\"InputLabel\">Username</Form.Label>\n    //       <Form.Control className=\"InputFocusGreen\" type=\"text\" name=\"uname\" required />\n    //       {renderErrorMessage(\"uname\")}\n    //     </Form.Group>\n\n    //     <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n    //       <Form.Label className=\"InputLabel\">Password</Form.Label>\n    //       <Form.Control className=\"InputFocusGreen\" type=\"password\" name=\"pass\" required />\n    //       {renderErrorMessage(\"pass\")}\n    //     </Form.Group>\n    //     <Button className=\"ButtonStyle\" variant=\"primary\" type=\"submit\">Submit</Button>\n    //   </Form>\n  // );\n     <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"\">\n          <label className=\"InputLabel\">Username </label>\n          <input className=\"InputFocusGreen\" type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"\">\n          <label className=\"InputLabel\">Password </label>\n          <input className=\"InputFocusGreen\" type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <button className=\"ButtonStyle\" variant=\"primary\" type=\"submit\">Next</button>\n      </form>\n    </div>); \n\n  return (\n    <div className=\"container \">\n      <div className=\"outer ToCenter DarkGreenBox LoginBox BlogBox CurvedContainer\">\n      <div className=\"middle\">\n        {/* <LineTitle Light={true} Title=\"Login in\" OnlyLine={false}/> */}\n        {isSubmitted ? <div className=\"MdFont CursiveFont LightGreenFontShade\">User successfully logged in</div> : renderForm}\n        <LineTitle Light={true} OnlyLine={true}/>\n      </div></div>\n    </div>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}