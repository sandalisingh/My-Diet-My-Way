{"ast":null,"code":"var _jsxFileName = \"/Applications/Sandali/DietitianWebsite/client/src/pages/Login2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport LineTitle from \"../Components/LineTitle\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login2() {\n  _s();\n\n  //----------------------------------- L O G  I N -----------------------------------------\n  const [errorMessages, setErrorMessages] = useState();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isDietitian, setIsDietitian] = useState(false);\n  const database = [{\n    username: \"user1\",\n    email: \"user1@gmail.com\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    email: \"user2@gmail.com\",\n    password: \"pass2\"\n  }, {\n    username: \"dietitianRashu\",\n    email: \"dt.rashumalhotra@gmail.com\",\n    password: \"Password\"\n  }];\n  const errors = {\n    uname: \"Invalid Username\",\n    email: \"Invalid Email\",\n    pass: \"Invalid Password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      email,\n      pass\n    } = document.forms[0]; //inputs from form\n    // Find username in db\n\n    const userData = database.find(user => user.username === uname.value); // console.log(uname.value);\n    // console.log(pass.value);\n    // Compare password\n\n    if (userData) {\n      if (userData.email !== email.value) {\n        // Invalid password\n        console.log(email.value);\n        setErrorMessages({\n          name: \"email\",\n          message: errors.email\n        });\n        console.log(errorMessages.message);\n      } else if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        //valid password and username\n        setIsSubmitted(true);\n\n        if (uname.value === \"dietitianRashu\") {\n          setIsDietitian(true);\n        }\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      }); // console.log(errorMessages.message);\n    }\n  };\n\n  const renderErrorMessage = () => {\n    // if (Errors.isError ) {\n    // console.log(\"i work fxn           - \" + errorMessages.message)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Error SmFont CursiveFont\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: errorMessages.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this); // }\n  }; //   useEffect( () => renderForm(), [] );\n\n\n  const renderForm = () => /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    className: \"container\",\n    style: {\n      color: \"#48466D\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"InputLabel\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"InputFocusGreen\",\n        type: \"text\",\n        name: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"InputLabel\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"InputFocusGreen\",\n        type: \"email\",\n        name: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"InputLabel\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"InputFocusGreen\",\n        type: \"password\",\n        name: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), renderErrorMessage(\"uname\"), renderErrorMessage(\"email\"), renderErrorMessage(\"pass\"), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"ButtonStyle\",\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer ToCenter DarkGreenBox LoginBox BlogBox CurvedContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(LineTitle, {\n          Light: true,\n          Title: \"Login\",\n          OnlyLine: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), isSubmitted ? isDietitian ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MdFont CursiveFont LightGreenFontShade\",\n          children: \"\\\"Dietien successfully logged in!\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MdFont CursiveFont LightGreenFontShade\",\n          children: \"\\\"User successfully logged in\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this) : renderForm, /*#__PURE__*/_jsxDEV(LineTitle, {\n          Light: true,\n          OnlyLine: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login2, \"io0scc1p/p9SNTqlLwrEvUtSilo=\");\n\n_c = Login2;\nexport default Login2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login2\");","map":{"version":3,"sources":["/Applications/Sandali/DietitianWebsite/client/src/pages/Login2.jsx"],"names":["React","useState","useEffect","LineTitle","Form","Button","Login2","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","isDietitian","setIsDietitian","database","username","email","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","console","log","name","message","renderErrorMessage","renderForm","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport LineTitle from \"../Components/LineTitle\"\nimport { Form, Button } from \"react-bootstrap\";\n\n\nfunction Login2() {\n \n  \n     //----------------------------------- L O G  I N -----------------------------------------\n  const [errorMessages, setErrorMessages] = useState();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isDietitian, setIsDietitian] = useState(false);\n\n  const database = [\n    {\n      username: \"user1\",\n      email: \"user1@gmail.com\",\n      password: \"pass1\"\n    },\n    {\n      username: \"user2\",\n      email : \"user2@gmail.com\",\n      password: \"pass2\"\n    },\n    {\n      username: \"dietitianRashu\",\n      email: \"dt.rashumalhotra@gmail.com\",\n      password: \"Password\"\n    }\n  ];\n\n  const errors = {\n    uname: \"Invalid Username\",\n    email: \"Invalid Email\",\n    pass: \"Invalid Password\"\n  };\n\n  const handleSubmit = (event) => {\n    //Prevent page reload\n    event.preventDefault();\n\n    var { uname, email, pass } = document.forms[0];  //inputs from form\n\n    // Find username in db\n    const userData = database.find((user) => user.username === uname.value);\n    // console.log(uname.value);\n    // console.log(pass.value);\n\n    // Compare password\n    if (userData) {\n      if (userData.email !== email.value) {\n        // Invalid password\n        console.log(email.value);\n        setErrorMessages({ name: \"email\", message: errors.email });\n        console.log(errorMessages.message);\n      } else if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({ name: \"pass\", message: errors.pass });\n      } else {\n        //valid password and username\n        setIsSubmitted(true);\n        if(uname.value === \"dietitianRashu\") {\n          setIsDietitian(true);\n        }\n      }\n    } else {\n      // Username not found\n      setErrorMessages({ name: \"uname\", message: errors.uname });\n      // console.log(errorMessages.message);\n    }\n  };\n  \n  const renderErrorMessage = () => {\n    // if (Errors.isError ) {\n      // console.log(\"i work fxn           - \" + errorMessages.message)\n      return (\n        <div className=\"Error SmFont CursiveFont\"><small>{errorMessages.message}</small></div>\n       );\n    // }\n  }\n\n//   useEffect( () => renderForm(), [] );\n\n    const renderForm = () => (\n        <Form onSubmit={handleSubmit} className=\"container\" style={{color:\"#48466D\"}}>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label className=\"InputLabel\">Username</Form.Label>\n          <Form.Control className=\"InputFocusGreen\" type=\"text\" name=\"Username\" required />\n          \n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label className=\"InputLabel\">Email</Form.Label>\n          <Form.Control className=\"InputFocusGreen\" type=\"email\" name=\"Email\" required />\n          \n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label className=\"InputLabel\">Password</Form.Label>\n          <Form.Control className=\"InputFocusGreen\" type=\"password\" name=\"Password\" required />\n          \n        </Form.Group>\n        \n        {renderErrorMessage(\"uname\")}\n        {renderErrorMessage(\"email\")}\n        {renderErrorMessage(\"pass\")}\n\n        <Button className=\"ButtonStyle\" variant=\"primary\" type=\"submit\">Submit</Button>\n\n      </Form>\n    );\n\n  return (\n    <div className=\"container \">\n      <div className=\"outer ToCenter DarkGreenBox LoginBox BlogBox CurvedContainer\">\n      <div className=\"middle\">\n        <LineTitle Light={true} Title=\"Login\" OnlyLine={false}/>\n        {\n            isSubmitted ?\n            (\n                \n                (\n                    isDietitian ? \n                    <div className=\"MdFont CursiveFont LightGreenFontShade\">\n                        \"Dietien successfully logged in!\"\n                    </div> \n                    : \n                    <div className=\"MdFont CursiveFont LightGreenFontShade\">\n                        \"User successfully logged in\"\n                    </div> \n                )\n            ) : renderForm\n        }\n        <LineTitle Light={true} OnlyLine={true} />\n      </div></div>\n    </div>\n  );\n}\n\nexport default Login2;"]},"metadata":{},"sourceType":"module"}