{"ast":null,"code":"/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\nexport default function mergeArrays(a, b) {\n  var merged = a.slice();\n\n  for (var _iterator = b, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var element = _ref;\n\n    if (a.indexOf(element) < 0) {\n      merged.push(element);\n    }\n  }\n\n  return merged.sort(function (a, b) {\n    return a - b;\n  }); // ES6 version, requires Set polyfill.\n  // let merged = new Set(a)\n  // for (const element of b) {\n  // \tmerged.add(i)\n  // }\n  // return Array.from(merged).sort((a, b) => a - b)\n}","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,eAAe,SAASA,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACzC,MAAMC,MAAM,GAAGF,CAAC,CAACG,KAAFH,EAAf;;AAEA,uBAAsBC,CAAtB,kHAAyB;AAAA;;AAAA;AAAA;AAAAG;AAAA;AAAAC;AAAA;AAAAD;AAAA;;AAAA,QAAdE,OAAc;;AACxB,QAAIN,CAAC,CAACO,OAAFP,CAAUM,OAAVN,IAAqB,CAAzB,EAA4B;AAC3BE,YAAM,CAACM,IAAPN,CAAYI,OAAZJ;AACA;AACD;;AAED,SAAOA,MAAM,CAACO,IAAPP,CAAY,UAACF,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,GAAGC,CAAd;AAAZ,IAAP,CATyC,CAWzC;AACA;AACA;AACA;AACA;AACA;AACA","names":["mergeArrays","a","b","merged","slice","_ref","_i","element","indexOf","push","sort"],"sources":["/Applications/Sandali/DietitianWebsite/client/node_modules/libphonenumber-js/source/helpers/mergeArrays.js"],"sourcesContent":["/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\r\nexport default function mergeArrays(a, b) {\r\n\tconst merged = a.slice()\r\n\r\n\tfor (const element of b) {\r\n\t\tif (a.indexOf(element) < 0) {\r\n\t\t\tmerged.push(element)\r\n\t\t}\r\n\t}\r\n\r\n\treturn merged.sort((a, b) => a - b)\r\n\r\n\t// ES6 version, requires Set polyfill.\r\n\t// let merged = new Set(a)\r\n\t// for (const element of b) {\r\n\t// \tmerged.add(i)\r\n\t// }\r\n\t// return Array.from(merged).sort((a, b) => a - b)\r\n}"]},"metadata":{},"sourceType":"module"}