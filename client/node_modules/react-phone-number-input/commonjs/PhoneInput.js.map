{"version":3,"sources":["../source/PhoneInput.js"],"names":["PhoneInput","ref","Component","country","defaultCountry","useNationalFormatForDefaultCountryValue","value","onChange","metadata","international","withCountryCallingCode","rest","phoneDigits","setPhoneDigits","React","forwardRef","propTypes","PropTypes","string","func","isRequired","bool","elementType","object","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;AAEA,SAASA,UAAT,OAWGC,GAXH,EAWQ;AAAA,MAVPC,SAUO,QAVPA,SAUO;AAAA,MATPC,OASO,QATPA,OASO;AAAA,MARPC,cAQO,QARPA,cAQO;AAAA,MAPPC,uCAOO,QAPPA,uCAOO;AAAA,MANPC,KAMO,QANPA,KAMO;AAAA,MALPC,QAKO,QALPA,QAKO;AAAA,MAJPC,QAIO,QAJPA,QAIO;AAAA,MAHPC,aAGO,QAHPA,aAGO;AAAA,MAFPC,sBAEO,QAFPA,sBAEO;AAAA,MADJC,IACI;;AACP;AADO,wBAKH,iCAAe;AAClBL,IAAAA,KAAK,EAALA,KADkB;AAElBC,IAAAA,QAAQ,EAARA,QAFkB;AAGlBJ,IAAAA,OAAO,EAAPA,OAHkB;AAIlBC,IAAAA,cAAc,EAAdA,cAJkB;AAKlBK,IAAAA,aAAa,EAAbA,aALkB;AAMlBC,IAAAA,sBAAsB,EAAtBA,sBANkB;AAOlBL,IAAAA,uCAAuC,EAAvCA,uCAPkB;AAQlBG,IAAAA,QAAQ,EAARA;AARkB,GAAf,CALG;AAAA;AAAA,MAGNI,WAHM;AAAA,MAINC,cAJM;;AAeP,SACC,gCAAC,SAAD,eACKF,IADL;AAEC,IAAA,GAAG,EAAEV,GAFN;AAGC,IAAA,QAAQ,EAAEO,QAHX;AAIC,IAAA,aAAa,EAAEC,aAJhB;AAKC,IAAA,sBAAsB,EAAEC,sBALzB;AAMC,IAAA,OAAO,EAAEP,OAAO,IAAIC,cANrB;AAOC,IAAA,KAAK,EAAEQ,WAPR;AAQC,IAAA,QAAQ,EAAEC;AARX,KADD;AAWA;;AAEDb,UAAU,GAAGc,kBAAMC,UAAN,CAAiBf,UAAjB,CAAb;AAEAA,UAAU,CAACgB,SAAX,GAAuB;AACtB;;;;;AAKAV,EAAAA,KAAK,EAAEW,sBAAUC,MANK;;AAQtB;;;;AAIAX,EAAAA,QAAQ,EAAEU,sBAAUE,IAAV,CAAeC,UAZH;;AActB;;;;;;;;;;AAUAjB,EAAAA,OAAO,EAAEc,sBAAUC,MAxBG;;AA0BtB;;;;;;;AAOAd,EAAAA,cAAc,EAAEa,sBAAUC,MAjCJ;;AAmCtB;;;;;;;;;;AAUAT,EAAAA,aAAa,EAAEQ,sBAAUI,IA7CH;;AA+CtB;;;;;;AAMAX,EAAAA,sBAAsB,EAAEO,sBAAUI,IArDZ;;AAuDtB;;;;AAIAnB,EAAAA,SAAS,EAAEe,sBAAUK,WAAV,CAAsBF,UA3DX;;AA6DtB;;;;;;AAMAf,EAAAA,uCAAuC,EAAEY,sBAAUI,IAAV,CAAeD,UAnElC;;AAqEtB;;;AAGAZ,EAAAA,QAAQ,EAAES,sBAAUM,MAAV,CAAiBH;AAxEL,CAAvB;AA2EApB,UAAU,CAACwB,YAAX,GAA0B;AACzB;;;;AAIA;;AAEA;;;;AAIAnB,EAAAA,uCAAuC,EAAE;AAXhB,CAA1B;eAceL,U","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport usePhoneDigits from './usePhoneDigits'\r\n\r\nfunction PhoneInput({\r\n\tComponent,\r\n\tcountry,\r\n\tdefaultCountry,\r\n\tuseNationalFormatForDefaultCountryValue,\r\n\tvalue,\r\n\tonChange,\r\n\tmetadata,\r\n\tinternational,\r\n\twithCountryCallingCode,\r\n\t...rest\r\n}, ref) {\r\n\t// \"Phone digits\" includes not only \"digits\" but also a `+` sign.\r\n\tconst [\r\n\t\tphoneDigits,\r\n\t\tsetPhoneDigits\r\n\t] = usePhoneDigits({\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t\tcountry,\r\n\t\tdefaultCountry,\r\n\t\tinternational,\r\n\t\twithCountryCallingCode,\r\n\t\tuseNationalFormatForDefaultCountryValue,\r\n\t\tmetadata\r\n\t})\r\n\treturn (\r\n\t\t<Component\r\n\t\t\t{...rest}\r\n\t\t\tref={ref}\r\n\t\t\tmetadata={metadata}\r\n\t\t\tinternational={international}\r\n\t\t\twithCountryCallingCode={withCountryCallingCode}\r\n\t\t\tcountry={country || defaultCountry}\r\n\t\t\tvalue={phoneDigits}\r\n\t\t\tonChange={setPhoneDigits} />\r\n\t)\r\n}\r\n\r\nPhoneInput = React.forwardRef(PhoneInput)\r\n\r\nPhoneInput.propTypes = {\r\n\t/**\r\n\t * The phone number (in E.164 format).\r\n\t * Examples: `\"+12\"`, `\"+12133734253\"`.\r\n\t * An \"empty\" `value` could be represented by any \"falsy\" value like `undefined`, `null` or an empty string `\"\"`.\r\n\t */\r\n\tvalue: PropTypes.string,\r\n\r\n\t/**\r\n\t * A function of `value: string?`.\r\n\t * Updates the `value` property (to `undefined` in case it's empty).\r\n\t */\r\n\tonChange: PropTypes.func.isRequired,\r\n\r\n\t/**\r\n\t * A two-letter country code for formatting `value`\r\n\t * as a national phone number (example: `(213) 373-4253`),\r\n\t * or as an international phone number without \"country calling code\"\r\n\t * if `international` property is passed (example: `213 373 4253`).\r\n\t * Example: \"US\".\r\n\t * If no `country` is passed then `value`\r\n\t * is formatted as an international phone number.\r\n\t * (example: `+1 213 373 4253`)\r\n\t */\r\n\tcountry: PropTypes.string,\r\n\r\n\t/**\r\n\t * A two-letter country code for formatting `value`\r\n\t * when a user inputs a national phone number (example: `(213) 373-4253`).\r\n\t * The user can still input a phone number in international format.\r\n\t * Example: \"US\".\r\n\t * `country` and `defaultCountry` properties are mutually exclusive.\r\n\t */\r\n\tdefaultCountry: PropTypes.string,\r\n\r\n\t/**\r\n\t * If `country` property is passed along with `international={true}` property\r\n\t * then the phone number will be input in \"international\" format for that `country`\r\n\t * (without \"country calling code\").\r\n\t * For example, if `country=\"US\"` property is passed to \"without country select\" input\r\n\t * then the phone number will be input in the \"national\" format for `US` (`(213) 373-4253`).\r\n\t * But if both `country=\"US\"` and `international={true}` properties are passed then\r\n\t * the phone number will be input in the \"international\" format for `US` (`213 373 4253`)\r\n\t * (without \"country calling code\" `+1`).\r\n\t */\r\n\tinternational: PropTypes.bool,\r\n\r\n\t/**\r\n\t * If `country` and `international` properties are set,\r\n\t * then by default it won't include \"country calling code\" in the input field.\r\n\t * To change that, pass `withCountryCallingCode` property,\r\n\t * and it will include \"country calling code\" in the input field.\r\n\t */\r\n\twithCountryCallingCode: PropTypes.bool,\r\n\r\n\t/**\r\n\t * A component that renders the `<input/>` itself and also\r\n\t * parses and formats its `value` as the user inputs it.\r\n\t */\r\n\tComponent: PropTypes.elementType.isRequired,\r\n\r\n\t/**\r\n\t * When `defaultCountry` is defined and the initial `value` corresponds to `defaultCountry`,\r\n\t * then the `value` will be formatted as a national phone number by default.\r\n\t * To format the initial `value` of `defaultCountry` as an international number instead\r\n\t * set `useNationalFormatForDefaultCountryValue` property to `true`.\r\n\t */\r\n\tuseNationalFormatForDefaultCountryValue: PropTypes.bool.isRequired,\r\n\r\n\t/**\r\n\t * `libphonenumber-js` metadata.\r\n\t */\r\n\tmetadata: PropTypes.object.isRequired\r\n}\r\n\r\nPhoneInput.defaultProps = {\r\n\t/**\r\n\t * Set to `true` to force international phone number format\r\n\t * (without \"country calling code\") when `country` is specified.\r\n\t */\r\n\t// international: false,\r\n\r\n\t/**\r\n\t * Prefer national format when formatting E.164 phone number `value`\r\n\t * corresponding to `defaultCountry`.\r\n\t */\r\n\tuseNationalFormatForDefaultCountryValue: true\r\n}\r\n\r\nexport default PhoneInput"],"file":"PhoneInput.js"}